<local:SharedResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
                                xmlns:local="clr-namespace:Maple"
                                xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                                xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                                xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--  Remember: the order of these styles matters, since they depend on each other. If one references for a style not yet declared, you get random RuntimeErrors  -->

    <!--#region Default values-->
    <sys:Double x:Key="DefaultSpacing">5</sys:Double>
    <GridLength x:Key="DefaultGridLength">5</GridLength>
    <Thickness x:Key="DefaultThickness"
               Bottom="{StaticResource DefaultSpacing}"
               Left="{StaticResource DefaultSpacing}"
               Right="{StaticResource DefaultSpacing}"
               Top="{StaticResource DefaultSpacing}" />

    <Thickness x:Key="LeftRightThickness"
               Bottom="0"
               Left="{StaticResource DefaultSpacing}"
               Right="{StaticResource DefaultSpacing}"
               Top="0" />

    <Thickness x:Key="TopBottomThickness"
               Bottom="{StaticResource DefaultSpacing}"
               Left="0"
               Right="0"
               Top="{StaticResource DefaultSpacing}" />
    <!--  endregion  -->

    <!--#region TextBlock Styles-->
    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

    <!--#region TextBox Styles-->
    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

    <!--#region  Icon Styles-->
    <Style x:Key="HugeIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
    </Style>

    <Style x:Key="BigIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
    </Style>

    <Style x:Key="IconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
    </Style>

    <Style x:Key="MiniIconStyle" TargetType="icons:PackIconMaterial">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
    </Style>

    <Style x:Key="BaseLayoutStyle" TargetType="Control">
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style x:Key="BaseRowDefinitionStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="{StaticResource DefaultGridLength}" />
    </Style>

    <Style x:Key="BaseColumnDefinitionStyle" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="{StaticResource DefaultGridLength}" />
    </Style>
    <!--#endregion  Icon Styles-->

    <!--#region  DataGridRow Styles-->
    <Style x:Key="BaseDataGridRowStyle"
           BasedOn="{StaticResource {x:Type DataGridRow}}"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
    </Style>
    <!--#endregion  DataGridRow Styles-->

    <!--#region  DataGrid Styles-->
    <Style x:Key="BaseDataGridStyle"
           BasedOn="{StaticResource {x:Type DataGrid}}"
           TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="True" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="RowStyle" Value="{StaticResource BaseDataGridRowStyle}" />
    </Style>
    <!--#endregion  DataGrid Styles-->

    <!--#region  Window Styles-->
    <Style x:Key="BaseWindowStyle"
           BasedOn="{StaticResource {x:Type metro:MetroWindow}}"
           TargetType="{x:Type metro:MetroWindow}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
        <Setter Property="Height" Value=" 506" />
        <Setter Property="MinHeight" Value="506" />
        <Setter Property="MinWidth" Value="900" />

        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="TextElement.FontSize" Value="13" />
        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="Width" Value="900" />

        <Setter Property="ShowIconOnTitleBar" Value="False" />
        <Setter Property="GlowBrush" Value="Black" />
        <Setter Property="TitleCaps" Value="False" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="SaveWindowPosition" Value="False" />
    </Style>
    <!--#endregion  Window Styles-->

    <!--#region  Button Styles-->
    <Style x:Key="BaseButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Height" Value="33.75" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="MinWidth" Value="60" />
    </Style>

    <Style x:Key="BaseDataGridButtonStyle"
           BasedOn="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
           TargetType="{x:Type materialDesign:PopupBox}">
        <Setter Property="Margin" Value="0,-30,10,0" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="PlacementMode" Value="LeftAndAlignMiddles" />
        <Setter Property="ToolTipService.Placement" Value="Mouse" />
    </Style>

    <Style x:Key="OptionsButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Settings" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
    </Style>

    <Style x:Key="ComputeButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Magnify" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButtonStyle"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Close" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonStyle"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Plus" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniAddButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Plus" Style="{Binding MiniIconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniDeleteButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Delete" Style="{Binding MiniIconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Delete" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionButton}"
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Play" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPlaying, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <icons:PackIconMaterial Kind="Stop" Style="{Binding IconStyle}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PauseButtonStyle"
           BasedOn="{StaticResource BaseButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="Pause" Style="{Binding IconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PreviousButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="SkipPrevious" Style="{Binding MiniIconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NextButtonStyle"
           BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}"
           TargetType="{x:Type Button}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <icons:PackIconMaterial Kind="SkipNext" Style="{Binding MiniIconStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion  Button Styles-->

    <!--#region  ToggleButton Styles-->
    <Style x:Key="MutedPlayerToggleButtonStyle" TargetType="{x:Type ContentControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Silent}" Value="True">
                <Setter Property="Template" Value="{StaticResource IsMediaPlayerSilentTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Silent}" Value="False">
                <Setter Property="Template" Value="{StaticResource IsMediaPlayerNotSilentTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion  ToggleButton Styles-->

    <!--#region Control Templates-->
    <ControlTemplate x:Key="BusyTemplate">
        <materialDesign:TransitioningContent>
            <materialDesign:TransitioningContent.OpeningEffects>
                <materialDesign:TransitionEffect Kind="FadeIn" />
            </materialDesign:TransitioningContent.OpeningEffects>
            <Grid>
                <ProgressBar HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             IsIndeterminate="True"
                             Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Value="0" />
            </Grid>
        </materialDesign:TransitioningContent>
    </ControlTemplate>

    <ControlTemplate x:Key="IsMediaPlayerSilentTemplate">
        <icons:PackIconMaterial Kind="SpeakerOff" Style="{Binding IconStyle}" />
    </ControlTemplate>

    <ControlTemplate x:Key="IsMediaPlayerNotSilentTemplate">
        <icons:PackIconMaterial Kind="Speaker" Style="{Binding IconStyle}" />
    </ControlTemplate>

    <ControlTemplate x:Key="IsRestrictedMediaItemTemplate">
        <icons:PackIconMaterial Kind="BlockHelper"
                                Style="{StaticResource IconStyle}"
                                ToolTip="{local:Translation RestrictionRestricted}" />
    </ControlTemplate>

    <ControlTemplate x:Key="IsNotRestrictedMediaItemTemplate">
        <icons:PackIconMaterial Kind="Check"
                                Style="{StaticResource IconStyle}"
                                ToolTip="{local:Translation ResctrictionNone}" />
    </ControlTemplate>

    <!--#endregion Control Templates-->

    <!--#region local:DataTemplates-->

    <!--#region Dialogs-->
    <DataTemplate DataType="{x:Type local:ExceptionDialogViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <icons:PackIconMaterial Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Bug"
                                    Style="{StaticResource HugeIconStyle}" />
            <ScrollViewer Grid.Column="2"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Hidden">
                <TextBlock Text="{Binding ExceptionText}" />
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MessageDialogViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <icons:PackIconMaterial Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="InformationOutline"
                                    Style="{StaticResource HugeIconStyle}" />
            <ScrollViewer Grid.Column="2"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Hidden">
                <TextBlock Text="{Binding Message}" />
            </ScrollViewer>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:FileBrowserDialogViewModel}" />

    <DataTemplate DataType="{x:Type local:FolderBrowserDialogViewModel}" />

    <DataTemplate DataType="{x:Type local:ProgressDialogViewModel}" />
    <!--#endregion-->

    <DataTemplate DataType="{x:Type local:CreateMediaItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Style="{StaticResource BaseColumnDefinitionStyle}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Style="{StaticResource BaseRowDefinitionStyle}" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBox Grid.Row="0"
                     Grid.Column="0"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center"
                     Text="{Binding Source, UpdateSourceTrigger=PropertyChanged}" />

            <Button Grid.Row="0"
                    Grid.Column="2"
                    Command="{Binding ParseCommand}"
                    Style="{StaticResource ComputeButtonStyle}" />

            <Border Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    BorderThickness="0">

                <DataGrid ItemsSource="{Binding Items}" Style="{StaticResource BaseDataGridStyle}">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding RemoveCommand}" Header="{local:Translation Remove}">
                                <MenuItem.Icon>
                                    <icons:PackIconMaterial Kind="PlaylistMinus" Style="{StaticResource IconStyle}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding ClearCommand}" Header="{local:Translation Clear}">
                                <MenuItem.Icon>
                                    <icons:PackIconMaterial Kind="PlaylistRemove" Style="{StaticResource IconStyle}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns>
                        <!--  Title  -->
                        <DataGridTemplateColumn Header="{local:Translation Title}" SortMemberPath="Title">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding Title}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Duration  -->
                        <DataGridTemplateColumn Header="{local:Translation Duration}" SortMemberPath="Duration">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding Duration, StringFormat={}{0:c}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Restricted  -->
                        <DataGridTemplateColumn Header="{local:Translation Restriction}" SortMemberPath="PrivacyStatus">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding PrivacyStatus}">
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PrivacyStatus}" Value="0">
                                                        <Setter Property="Template" Value="{StaticResource IsNotRestrictedMediaItemTemplate}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PrivacyStatus}" Value="1">
                                                        <Setter Property="Template" Value="{StaticResource IsRestrictedMediaItemTemplate}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:Playlist}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <icons:PackIconMaterial Grid.Column="0"
                                    Width="32"
                                    Height="32"
                                    VerticalAlignment="Center"
                                    Kind="FormatListBulleted" />

            <StackPanel Grid.Column="1"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                <TextBlock FontSize="22"
                           FontWeight="Medium"
                           Text="{Binding Title}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap" />
                <TextBlock Text="{Binding Description}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Description}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <icons:PackIconMaterial Grid.Column="0"
                                    Width="32"
                                    Height="32"
                                    VerticalAlignment="Center"
                                    Kind="File" />

            <StackPanel Grid.Column="1"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        Orientation="Vertical">
                <TextBlock FontSize="22"
                           FontWeight="Medium"
                           Text="{Binding Title}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap" />
                <TextBlock Text="{Binding Description}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Description}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MainMediaPlayer}">
        <StackPanel Orientation="Horizontal">
            <icons:PackIconModern Margin="0,0,5,0" Kind="MonitorPlay" />
            <TextBlock Text="{Binding Name}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:MediaPlayer}">
        <StackPanel Orientation="Horizontal">
            <icons:PackIconOcticons Margin="0,0,5,0" Kind="DeviceDesktop" />
            <TextBlock Text="{Binding Name}" />
        </StackPanel>
    </DataTemplate>
    <!--#endregion-->

</local:SharedResourceDictionary>