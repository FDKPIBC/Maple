<local:IoCWindow x:Class="Maple.Shell"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
                 xmlns:local="clr-namespace:Maple"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                 Title="{local:Translation ShellTitle}"
                 Style="{StaticResource BaseWindowStyle}">

    <!--  DataContext ShellViewModel  -->
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands ShowSeparators="False">
            <Button Command="{Binding Scenes.OpenColorOptionsCommand}">
                <icons:PackIconMaterial Kind="Brush" />
            </Button>
            <Button Command="{Binding Scenes.OpenMediaPlayerCommand}">
                <icons:PackIconMaterial Kind="Play" />
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>

    <metro:MetroWindow.LeftWindowCommands>
        <metro:WindowCommands>
            <Button Command="{Binding Scenes.OpenGithubPageCommand}">
                <icons:PackIconMaterial Kind="GithubCircle" />
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.LeftWindowCommands>

    <DockPanel x:Name="Root">

        <!--  DataContext: StatusBar  -->
        <materialDesign:ColorZone Padding="4"
                                  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                  DataContext="{Binding StatusbarViewModel}"
                                  DockPanel.Dock="Bottom"
                                  Mode="PrimaryMid">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <TextBlock>
                    <Run Text="{Binding Version, Mode=OneWay}" />
                    <Run Text="{Binding Language, Mode=OneWay}" />
                </TextBlock>
                <TextBlock Margin="5,0" Text="{local:Translation PlaylistCurrent}" />
                <TextBlock Text="{Binding MainMediaPlayer.Playlist.Title, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Margin="5,0" Text="{Binding MainMediaPlayer.Playlist.CurrentItem.Title, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </materialDesign:ColorZone>

        <!--  Content Area  -->
        <!--  DataContext ShellViewModel  -->
        <materialDesign:DialogHost CloseOnClickAway="True"
                                   Identifier="RootDialog"
                                   IsOpen="{Binding DialogViewModel.IsOpen}">
            <materialDesign:DialogHost.DialogContent>
                <DockPanel DataContext="{Binding DialogViewModel}">
                    <materialDesign:ColorZone Padding="4"
                                              DockPanel.Dock="Top"
                                              Mode="PrimaryMid">
                        <DockPanel LastChildFill="False">
                            <TextBlock DockPanel.Dock="Left"
                                       FontWeight="Medium"
                                       Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                            <Button Command="{Binding CloseDialogCommand}"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource MaterialDesignToolForegroundButton}"
                                    ToolTip="{local:Translation Close}">
                                <icons:PackIconMaterial Kind="WindowClose" Style="{StaticResource MiniIconStyle}" />
                            </Button>
                        </DockPanel>

                    </materialDesign:ColorZone>

                    <DockPanel Margin="5">
                        <StackPanel Margin="0,5,0,0"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Bottom"
                                    Orientation="Horizontal">
                            <Button Command="{Binding AcceptDialogCommand}"
                                    Content="{local:Translation Accept}"
                                    ToolTip="{local:Translation Accept}" />
                            <Button Command="{Binding CancelDialogCommand}"
                                    Content="{local:Translation Cancel}"
                                    ToolTip="{local:Translation Cancel}"
                                    Visibility="{Binding IsCancelVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>

                        <ContentControl MinWidth="300"
                                        MinHeight="169"
                                        MaxWidth="900"
                                        MaxHeight="506"
                                        Content="{Binding Context, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                </DockPanel>
            </materialDesign:DialogHost.DialogContent>
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding Path=IsChecked, ElementName=MenuToggleButton}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="212" DataContext="{Binding Scenes}">
                        <ToggleButton Margin="16"
                                      HorizontalAlignment="Right"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Path=IsChecked, ElementName=MenuToggleButton, Mode=TwoWay}"
                                      Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                        <ListBox Grid.IsSharedSizeScope="True"
                                 ItemsSource="{Binding Items, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                                 PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                                 SelectedItem="{Binding SelectedItem, IsAsync=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnNotifyDataErrors=True}"
                                 SelectionMode="Single">
                            <ListBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="Scene">
                                    <TextBlock Grid.Column="1"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               Text="{Binding DisplayName, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <DockPanel LastChildFill="True">
                    <materialDesign:ColorZone Padding="16"
                                              materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                              DockPanel.Dock="Top"
                                              Mode="PrimaryMid">
                        <DockPanel>
                            <ToggleButton x:Name="MenuToggleButton"
                                          HorizontalAlignment="Left"
                                          IsChecked="False"
                                          Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="22"
                                       FontWeight="Medium"
                                       Text="{Binding Scenes.SelectedItem.DisplayName, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <ContentControl Content="{Binding Scenes.SelectedItem.Content, IsAsync=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource BaseLayoutStyle}" />
                </DockPanel>

            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </DockPanel>

</local:IoCWindow>
