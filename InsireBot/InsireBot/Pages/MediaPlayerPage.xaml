<local:IoCUserControl x:Class="Maple.MediaPlayerPage"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:icons="clr-namespace:MahApps.Metro.IconPacks;assembly=MahApps.Metro.IconPacks"
                      xmlns:local="clr-namespace:Maple"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <local:IoCUserControl.Resources>
        <Style x:Key="BaseRepeatModeStyle"
               BasedOn="{StaticResource MaterialDesignFlatToggleButton}"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Margin" Value="2,0" />
        </Style>

        <Style x:Key="NoneRepeatModeStyle"
               BasedOn="{StaticResource BaseRepeatModeStyle}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <icons:PackIconMaterial Kind="RepeatOff" Style="{Binding IconStyle}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OneRepeatModeStyle"
               BasedOn="{StaticResource BaseRepeatModeStyle}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <icons:PackIconMaterial Kind="RepeatOnce" Style="{Binding IconStyle}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AllRepeatModeStyle"
               BasedOn="{StaticResource BaseRepeatModeStyle}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <icons:PackIconMaterial Kind="Repeat" Style="{Binding IconStyle}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ShuffleModeStyle"
               BasedOn="{StaticResource BaseRepeatModeStyle}"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <icons:PackIconMaterial Kind="ShuffleDisabled" Style="{Binding IconStyle}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <icons:PackIconMaterial Kind="Shuffle" Style="{Binding IconStyle}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </local:IoCUserControl.Resources>

    <Grid>
        <materialDesign:TransitioningContent>

            <materialDesign:TransitioningContent.OpeningEffects>
                <materialDesign:TransitionEffect Kind="FadeIn" />
            </materialDesign:TransitioningContent.OpeningEffects>

            <materialDesign:Card VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{StaticResource DefaultGridLength}" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="{StaticResource DefaultGridLength}" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="{StaticResource DefaultGridLength}" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="{StaticResource DefaultGridLength}" />
                    </Grid.ColumnDefinitions>

                    <!--  Playlist  -->
                    <ListView Grid.Row="1"
                              Grid.Column="1"
                              Grid.ColumnSpan="5"
                              SelectionMode="Single"
                              BorderThickness="0" Style="{StaticResource MaterialDesignListView}"
                              ItemsSource="{Binding Playlist.Items}">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.Items>
                                    <MenuItem Command="{Binding LoadFromFileCommand}" Header="{local:Translation FilePlaylistImport}">
                                        <MenuItem.Icon>
                                            <icons:PackIconMaterial Kind="FileFind" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{Binding LoadFromFolderCommand}" Header="{local:Translation FolderPlaylistImport}">
                                        <MenuItem.Icon>
                                            <icons:PackIconMaterial Kind="FolderDownload" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{Binding LoadFromUrlCommand}" Header="{local:Translation YoutubePlaylistImport}">
                                        <MenuItem.Icon>
                                            <icons:PackIconMaterial Kind="YoutubePlay" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{Binding RemoveCommand}" Header="{local:Translation Remove}">
                                        <MenuItem.Icon>
                                            <icons:PackIconMaterial Kind="PlaylistMinus" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Command="{Binding ClearCommand}" Header="{local:Translation Clear}">
                                        <MenuItem.Icon>
                                            <icons:PackIconMaterial Kind="PlaylistRemove" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu.Items>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <icons:PackIconMaterial >
                                                <icons:PackIconMaterial.Style>
                                                    <Style TargetType="{x:Type icons:PackIconMaterial}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsFile}" Value="True">
                                                                <Setter Property="Kind" Value="File"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsFile}" Value="False">
                                                                <Setter Property="Kind" Value="Earth"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </icons:PackIconMaterial.Style>
                                            </icons:PackIconMaterial>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" />
                                <GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Duration, StringFormat={}{0:c}}" />
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <!--  Previous, Play, Next  -->
                    <DockPanel Grid.Row="3"
                               Grid.Column="3"
                               LastChildFill="True">
                        <Button Grid.Row="0"
                                Grid.Column="0"
                                Command="{Binding PreviousCommand}"
                                DockPanel.Dock="Left"
                                Style="{StaticResource PreviousButtonStyle}"
                                ToolTip="{local:Translation Previous}" />
                        <Button Grid.Row="0"
                                Grid.Column="2"
                                Command="{Binding NextCommand}"
                                DockPanel.Dock="Right"
                                Style="{StaticResource NextButtonStyle}"
                                ToolTip="{local:Translation Next}" />
                        <Button Grid.Row="0"
                                Grid.Column="1"
                                Command="{Binding PlayCommand}"
                                Style="{StaticResource PlayButtonStyle}"
                                ToolTip="{local:Translation Playback}" />
                    </DockPanel>

                    <!--  Volume Slider  -->
                    <Grid Grid.Row="3" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <icons:PackIconMaterial Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Kind="VolumeLow"
                                                Style="{StaticResource IconStyle}" />
                        <Slider Grid.Column="1"
                                VerticalAlignment="Center"
                                AutoToolTipPlacement="BottomRight"
                                Maximum="100"
                                Minimum="0"
                                TickFrequency="1"
                                TickPlacement="None"
                                ToolTip="{local:Translation Volume}"
                                Value="{Binding Player.Volume}" />
                        <icons:PackIconMaterial Grid.Column="2"
                                                VerticalAlignment="Center"
                                                Kind="VolumeMedium"
                                                Style="{StaticResource IconStyle}" />
                    </Grid>

                    <!--  PlayMode  -->
                    <DockPanel Grid.Row="3"
                               Grid.Column="5"
                               LastChildFill="True">
                        <DockPanel LastChildFill="False">
                            <ToggleButton DockPanel.Dock="Left"
                                          IsChecked="{Binding Playlist.IsShuffeling}"
                                          Style="{StaticResource ShuffleModeStyle}"
                                          ToolTip="{local:Translation PlaybackShuffle}" />

                            <StackPanel DataContext="{Binding Playlist}"
                                        DockPanel.Dock="Right"
                                        Orientation="Horizontal"
                                        ToolTip="{local:Translation PlaybackMode}">

                                <RadioButton IsChecked="{Binding RepeatMode, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static local:RepeatMode.None}, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource NoneRepeatModeStyle}"
                                             ToolTip="{local:Translation PlaybackModeNone}" />

                                <RadioButton IsChecked="{Binding RepeatMode, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static local:RepeatMode.Single}, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource OneRepeatModeStyle}"
                                             ToolTip="{local:Translation PlaybackModeOne}" />

                                <RadioButton IsChecked="{Binding RepeatMode, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static local:RepeatMode.All}, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource AllRepeatModeStyle}"
                                             ToolTip="{local:Translation PlaybackModeAll}" />

                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                </Grid>
            </materialDesign:Card>
        </materialDesign:TransitioningContent>
    </Grid>
</local:IoCUserControl>
